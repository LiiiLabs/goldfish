name: CI on Debian bookworm
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  XMAKE_ROOT: y

jobs:
  build:
    container: debian:bookworm
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
    steps:
      - name: Install dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git 7zip unzip curl build-essential
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: git add safe directory
        run: git config --global --add safe.directory '*'

      - name: de-gitee
        run: sed -i '/gitee\.com/d' xmake/packages/s/s7/xmake.lua

      - name: set XMAKE_GLOBALDIR
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: v2.8.7
          actions-cache-folder: '.xmake-cache'

      - name: xmake repo --update
        run: xmake repo --update

      - name: cache packages from xrepo
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ runner.os }}-xrepo-${{ hashFiles('**/xmake.lua') }}

      - name: cache xmake
        uses: actions/cache@v3
        with:
          path: |
            tmp/build/.build_cache
          key: ${{ runner.os }}-build-qt6-${{ hashFiles('**/xmake.lua') }}

      - name: config
        run: xmake config -vD --policies=build.ccache -o tmp/build -m releasedbg --yes

      - name: build
        run: xmake build --yes -vD goldfish

      - name: run tests
        run: find tests | grep "test.scm" | xargs -I% bin/goldfish %
