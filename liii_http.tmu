<TMU|<tuple|1.0.5|1.2.9.8>>

<style|<tuple|generic|chinese|goldfish|literate|reduced-margins|python>>

<\body>
  <\hide-preamble>
    <assign|r7rs|<flag|R7RS|dark cyan>>

    <assign|srfi|<flag|SRFI|dark red>>

    <assign|font|math=Latin Modern Math,cjk=Noto CJK SC,CMU>

    <assign|typehint|<macro|body|<goldfish-lang|<arg|body>>>>
  </hide-preamble>

  <chapter|(liii http)>

  <section|许可证>

  <\goldfish-chunk|http/liii/http.scm|false|true>
    ;

    ; Copyright (C) 2024 The Goldfish Scheme Authors

    ;

    ; Licensed under the Apache License, Version 2.0 (the "License");

    ; you may not use this file except in compliance with the License.

    ; You may obtain a copy of the License at

    ;

    ; http://www.apache.org/licenses/LICENSE-2.0

    ;

    ; Unless required by applicable law or agreed to in writing, software

    ; distributed under the License is distributed on an "AS IS" BASIS, WITHOUT

    ; WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the

    ; License for the specific language governing permissions and limitations

    ; under the License.

    ;

    \;
  </goldfish-chunk>

  <section|接口>

  <\scm-chunk|http/liii/http.scm|true|true>
    (define-library (liii http)

    (import (liii hash-table)

    \ \ \ \ \ \ \ \ (liii alist))

    (export http-head http-get http-ok?)

    (begin

    \;
  </scm-chunk>

  <paragraph|HTTP响应对象>

  <\description>
    <item*|status_code>HTTP状态码

    <item*|url>最终有效的请求URL

    <item*|elapsed>请求的总时间，以秒为单位

    <item*|text>HTTP响应的正文

    <item*|reason>HTTP响应出错的原因

    <item*|headers>HTTP响应头
  </description>

  <section|Goldfish的可选参数>

  <\session|goldfish|default>
    <\output>
      Goldfish Scheme 17.11.0 Community Edition by LiiiLabs

      implemented on S7 Scheme (11.2, 22-Nov-2024)
    </output>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (define* (hi a (b 32) (c "hi")) (list a b c))
    <|unfolded-io>
      <goldfish-result|hi>
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (hi 1)
    <|unfolded-io>
      <goldfish-result|(1 32 "hi")>
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (hi :b 2 :a 3)
    <|unfolded-io>
      <goldfish-result|(3 2 "hi")>
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (hi 3 2 1)
    <|unfolded-io>
      <goldfish-result|(3 2 1)>
    </unfolded-io>

    <\input>
      \<gtr\>\ 
    <|input>
      \;
    </input>
  </session>

  <section|Python相关接口>

  <\session|python|default>
    <\output>
      Python 3.11.2 [/usr/bin/python3]

      Python plugin for TeXmacs.

      Please see the documentation in Help -\<gtr\> Plugins -\<gtr\> Python
    </output>

    <\input>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|input>
      import requests
    </input>

    <\input>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|input>
      r= requests.head("https://httpbin.org")
    </input>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.status_code
    <|unfolded-io>
      200
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.url
    <|unfolded-io>
      https://httpbin.org/
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.url
    <|unfolded-io>
      https://httpbin.org/
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.ok
    <|unfolded-io>
      True
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.elapsed
    <|unfolded-io>
      0:00:01.221606
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.headers
    <|unfolded-io>
      {'Date': 'Wed, 25 Dec 2024 07:28:12 GMT', 'Content-Type': 'text/html; charset=utf-8', 'Content-Length': '9593', 'Connection': 'keep-alive', 'Server': 'gunicorn/19.9.0', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Credentials': 'true'}
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.headers["Content-Length"]
    <|unfolded-io>
      9593
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.reason
    <|unfolded-io>
      OK
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.content
    <|unfolded-io>
      b''
    </unfolded-io>

    <\input>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|input>
      r= requests.get("https://httpbin.org")
    </input>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.status_code
    <|unfolded-io>
      200
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|unfolded-io>
      r.r
    <|unfolded-io>
      Moved Temporarily
    </unfolded-io>

    <\input>
      \<gtr\>\<gtr\>\<gtr\>\ 
    <|input>
      \;
    </input>
  </session>

  <section|Goldfish Scheme中的response设计>

  <\session|goldfish|default>
    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (import (liii hash-table))
    <|unfolded-io>
      <goldfish-result|(rootlet)>
    </unfolded-io>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (define r (make-hash-table))
    <|unfolded-io>
      <goldfish-result|(hash-table)>
    </unfolded-io>

    <\input>
      \<gtr\>\ 
    <|input>
      (hash-table-set! r 'ok #t)
    </input>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (r 'ok)
    <|unfolded-io>
      <goldfish-result|#t>
    </unfolded-io>

    <\input>
      \<gtr\>\ 
    <|input>
      (hash-table-set! r 'status-code 200)
    </input>

    <\unfolded-io>
      \<gtr\>\ 
    <|unfolded-io>
      (r 'status-code)
    <|unfolded-io>
      <goldfish-result|200>
    </unfolded-io>

    <\input>
      \<gtr\>\ 
    <|input>
      (hash-table-set! r 'headers (make-hash-table))
    </input>

    <\input>
      \<gtr\>\ 
    <|input>
      (hash-table-set! (r 'headers) "Content-Length" "9593")
    </input>

    <\folded-io>
      \<gtr\>\ 
    <|folded-io>
      ((r 'headers) "Content-Length")
    <|folded-io>
      <goldfish-result|"9593">
    </folded-io>

    <\input>
      \<gtr\>\ 
    <|input>
      \;
    </input>
  </session>

  <section|测试>

  如何测试：

  <\shell-code>
    xmake config --http=y --yes -vD

    bin/http http/tests/http_test.scm
  </shell-code>

  <\goldfish-chunk|http/tests/http_test.scm|false|true>
    (set! *load-path* (cons "http" *load-path*))

    \;

    (import (liii check)

    \ \ \ \ \ \ \ \ (liii http)

    \ \ \ \ \ \ \ \ (liii string))

    \;
  </goldfish-chunk>

  \;

  <section|实现>

  <paragraph|http-ok?><typehint|((r hash-table?)) =\<gtr\> boolean?>

  接受HTTP响应作为输入，返回该HTTP响应是否OK，一般来说，HTTP状态码小于400就是OK状态。

  <\goldfish-chunk|http/liii/http.scm|true|true>
    (define (http-ok? r)

    \ \ (let ((status-code (r 'status-code))

    \ \ \ \ \ \ \ \ (reason (r 'reason))

    \ \ \ \ \ \ \ \ (url (r 'url)))

    \ \ \ \ (cond ((and (\<gtr\>= status-code 400) (\<less\> status-code 500))

    \ \ \ \ \ \ \ \ \ \ \ (error 'http-error

    \ \ \ \ \ \ \ \ \ \ \ \ \ (string-append (integer-\<gtr\>string status-code)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ " Client Error: " reason " for url: " url)))

    \ \ \ \ \ \ \ \ \ \ ((and (\<gtr\>= status-code 500) (\<less\> status-code 600))

    \ \ \ \ \ \ \ \ \ \ \ (error 'http-error

    \ \ \ \ \ \ \ \ \ \ \ \ \ (string-append (integer-\<gtr\>string status-code)

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ " Server Error: " reason " for url: " url)))

    \ \ \ \ \ \ \ \ \ \ (else #t))))

    \;
  </goldfish-chunk>

  <paragraph|http-head>

  <\goldfish-chunk|http/liii/http.scm|true|true>
    (define* (http-head url)

    \ \ (let1 r (g_http-head url)

    \ \ \ \ \ \ \ \ r))

    \;
  </goldfish-chunk>

  <\goldfish-chunk|http/tests/http_test.scm|true|true>
    (let1 r (http-head "https://httpbin.org")

    \ \ (check (r 'status-code) =\<gtr\> 200)

    \ \ (check (r 'url) =\<gtr\> "https://httpbin.org/")

    \ \ (check-true (real? (r 'elapsed)))

    \ \ (check (r 'reason) =\<gtr\> "")

    \ \ (check (r 'text) =\<gtr\> "")

    \ \ (check ((r 'headers) "content-type") =\<gtr\> "text/html; charset=utf-8")

    \ \ (check ((r 'headers) "content-length") =\<gtr\> "9593")

    \ \ (check-true (http-ok? r)))

    \;
  </goldfish-chunk>

  <paragraph|http-get>

  <\goldfish-chunk|http/liii/http.scm|true|true>
    (define* (http-get url (params '()))

    \ \ (when (not (alist? params))

    \ \ \ \ (type-error params "is not a association list"))

    \ \ (let1 r (g_http-get url params)

    \ \ \ \ \ \ \ \ r))

    \;
  </goldfish-chunk>

  <subparagraph|不带参数的GET请求>

  <\goldfish-chunk|http/tests/http_test.scm|true|true>
    (let1 r (http-get "https://httpbin.org")

    \ \ (check (r 'status-code) =\<gtr\> 200)

    \ \ (check-true (\<gtr\> (string-length (r 'text)) 0))

    \ \ (check ((r 'headers) "content-type") =\<gtr\> "text/html; charset=utf-8"))

    \;
  </goldfish-chunk>

  <subparagraph|带参数的GET请求>

  <\goldfish-chunk|http/tests/http_test.scm|true|true>
    (let1 r (http-get "https://httpbin.org/get"

    \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ :params '(("key1" . "value1") ("key2" . "value2")))

    \ \ \ \ \ \ (check-true (string-contains (r 'text) "value1"))

    \ \ \ \ \ \ (check-true (string-contains (r 'text) "value2")))

    \;
  </goldfish-chunk>

  <section|结尾>

  <\goldfish-chunk|http/tests/http_test.scm|true|false>
    (check-report)

    \;
  </goldfish-chunk>

  <\scm-chunk|http/liii/http.scm|true|false>
    ) ; end of begin

    ) ; end of define-library

    \;
  </scm-chunk>
</body>

<\initial>
  <\collection>
    <associate|font-base-size|8>
    <associate|page-height|auto>
    <associate|page-screen-margin|false>
    <associate|page-type|a5>
    <associate|page-width|auto>
    <associate|save-aux|false>
  </collection>
</initial>
